// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type ArticleResult interface {
	IsArticleResult()
}

type CreateUserResult interface {
	IsCreateUserResult()
}

type UserResult interface {
	IsUserResult()
}

type Article struct {
	ID       string    `json:"id"`
	Title    string    `json:"title"`
	Content  string    `json:"content"`
	Author   *User     `json:"author"`
	Comments []Comment `json:"comments"`
}

func (Article) IsArticleResult() {}

type ArticleInput struct {
	ID string `json:"id"`
}

type Comment struct {
	ID      string   `json:"id"`
	Author  *User    `json:"author"`
	Article *Article `json:"article"`
}

type CreateUserInput struct {
	ID string `json:"id"`
}

type NotAuthorized struct {
	Reason *string `json:"reason"`
}

func (NotAuthorized) IsUserResult()       {}
func (NotAuthorized) IsArticleResult()    {}
func (NotAuthorized) IsCreateUserResult() {}

type User struct {
	ID       string    `json:"id"`
	Username string    `json:"username"`
	Articles []Article `json:"articles"`
	Comments []Comment `json:"comments"`
}

func (User) IsUserResult()       {}
func (User) IsCreateUserResult() {}

type UserInput struct {
	ID string `json:"id"`
}
